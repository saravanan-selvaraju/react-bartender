{"version":3,"sources":["components/Nav.js","components/Home.js","constants.js","components/Footer.js","components/Show.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","src","process","href","Home","Listitems","menu","Object","entries","key","value","push","alt","Component","Footer","Show","props","useState","setErrors","drinks","setDrinks","category","match","params","useEffect","a","async","fetch","json","then","res","catch","err","list","values","drink","ele","vars","Details","id","split","details","setDetails","DrinkName","Glass","Thumbnail","Date","Instruction","Ingredient","strDrink","strGlass","strDrinkThumb","strInstructions","ins","dateModified","keys","k","includes","replace","console","log","history","require","createBrowserHistory","App","render","location","exact","path","to","component","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3342bf1b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav>\r\n            <div>\r\n                <img className=\"App-Logo-Img\" src={process.env.PUBLIC_URL + '/img/ico/bartender.svg'}/>\r\n                <a className=\"App-Logo\" href={process.env.PUBLIC_URL +\"/\"}>Bartender</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n\r\n","import React, { Component } from 'react'\r\nimport {list_ico} from '../constants';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        var Listitems = []\r\n        const menu = {'Cocktail':`${list_ico}/cocktail.svg`, 'Shot':`${list_ico}/shot.svg`, 'Beer' : `${list_ico}/beer.svg`, 'Homemade Liqueur':`${list_ico}/homemade.svg`};\r\n        const prefix = '/show/'\r\n        for (const [key, value] of Object.entries(menu)) {\r\n            Listitems.push( <a className=\"App-List\" href={prefix + key}><img className=\"List-Icon\" alt={key} src={process.env.PUBLIC_URL + value}></img><p className=\"List-Name\">{key}</p></a>);\r\n        }\r\n        return (\r\n            <div>\r\n                {Listitems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","export const list_ico = '/img/ico';","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"Footer\">\r\n            <p>Fork on Github <a href=\"/\">react-bartender</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react'\r\nimport { object } from 'prop-types';\r\n\r\nconst Show = (props)=> {\r\n    const [hasError, setErrors] = useState(false);\r\n    const [drinks, setDrinks] = useState({});\r\n    const category = props.match.params[0];\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        const res = await fetch(\"https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=\"+category);\r\n        res\r\n          .json()\r\n          .then(res => setDrinks(res))\r\n          .catch(err => setErrors(err));\r\n      }\r\n      fetchData();\r\n    },[]);\r\n\r\n    var list = [];\r\n    for(var drink of Object.values(drinks)){\r\n        for(var ele of Object.values(drink)){\r\n            var vars = Object.values(ele)\r\n            list.push(<a className=\"List\" href={`/details/${category}/${vars[2]}`}><img className=\"List-Thump\" src={`${vars[1]}/preview`}></img><p className=\"List-Title\">{vars[0]}</p></a>)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {list}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Show;","import React,  { useState, useEffect } from 'react'\r\n\r\nfunction Details(props) {\r\n    var url = props.match.params[0];\r\n    var id = url.split('/')[1];\r\n    const [hasError, setErrors] = useState(false);\r\n    const [details, setDetails] = useState({});\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n          const res = await fetch(\"https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=\"+id);\r\n          res\r\n            .json()\r\n            .then(res => setDetails(res))\r\n            .catch(err => setErrors(err));\r\n        }\r\n        fetchData();\r\n    },[]);\r\n    \r\n    var DrinkName, Glass, Thumbnail, Instruction = [], Date\r\n    var Ingredient=[]\r\n    var Measure=[]\r\n\r\n    for(var [key,value] of Object.entries(details)){\r\n        for(var drink of value){\r\n            DrinkName = drink.strDrink\r\n            Glass = drink.strGlass\r\n            Thumbnail = drink.strDrinkThumb\r\n            for (var ins of drink.strInstructions.split(/[0-9]./)){\r\n                if(ins){\r\n                    Instruction.push(<li>{ins}</li>)\r\n                }\r\n            }\r\n            Date = drink.dateModified\r\n            for(var k of Object.keys(drink)){   \r\n                if( k.includes('strIngredient') && drink[k] != null){\r\n                   Ingredient.push(\r\n                        <tr>\r\n                            <td>{drink[k]}</td>\r\n                            <td>{drink[k.replace('strIngredient','strMeasure')]}</td>\r\n                       </tr>) \r\n                }\r\n            }\r\n            console.log(details);\r\n            \r\n        }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"Details\">\r\n            <h3 className=\"Details-Title\">{DrinkName}</h3>\r\n            <img className=\"Details-Img\" src={Thumbnail}></img>\r\n            <div className=\"Details-Body\">\r\n                <div className=\"Details-Tag\">\r\n                    <img src=\"/img/ico/glass.svg\" className=\"Tag-Ico\"></img><p className=\"Glass\">{Glass}</p> \r\n                    <img src=\"/img/ico/clock.svg\" className=\"Tag-Ico\"></img><p className=\"Date\">{Date}</p>\r\n                    </div>\r\n                <table className=\"Details-Table\">\r\n                    <tr>\r\n                        <th>Ingredients</th>\r\n                        <th>Measure</th>\r\n                    </tr>\r\n                    {Ingredient}\r\n                </table>               \r\n                <h4>Instructions:</h4>\r\n                <ol>{Instruction}</ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Details;","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Show from './components/Show';\nimport Details from './components/Details';\n\nconst history = require('history').createBrowserHistory;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div>\n              <Nav/>\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n              <Route exact path={process.env.PUBLIC_URL+'/'} component ={Home} />\n                <Route exact path={process.env.PUBLIC_URL +\"/show/*\"} component ={Show} />\n                <Route exact path={process.env.PUBLIC_URL +\"/details/*\"} component ={Details} />\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n        <Footer></Footer>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}